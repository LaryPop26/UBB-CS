        -:    0:Source:C:/Users/popla/CLionProjects/lab2-4/MyList.c
        -:    0:Graph:C:\Users\popla\CLionProjects\lab2-4\cmake-build-debug-coverage\CMakeFiles\lab2_4.dir\MyList.c.gcno
        -:    0:Data:C:\Users\popla\CLionProjects\lab2-4\cmake-build-debug-coverage\CMakeFiles\lab2_4.dir\MyList.c.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by popla on 11-Mar-25.
        -:    3://
        -:    4:
        -:    5:#include "MyList.h"
        -:    6:#include <string.h>
        -:    7:
function createEmpty called 7 returned 100% blocks executed 100%
        7:    8:MyList createEmpty() {
        -:    9:    MyList participants;
        7:   10:    participants.length = 0;
        7:   11:    return participants;
        7:   11-block  0
        -:   12:}
        -:   13:
function destroyMyList called 4 returned 100% blocks executed 100%
        4:   14:void destroyMyList(MyList* myList) {
        4:   15:    myList->length = 0;
        4:   16:}
        -:   17:
function addElem called 17 returned 100% blocks executed 100%
       17:   18:void addElem(MyList* myList, ElemType eL) {
       17:   19:    myList->elems[myList->length] = eL;
       17:   20:    myList->length++;
       17:   21:}
        -:   22:
function getMyElement called 23 returned 100% blocks executed 100%
       23:   23:ElemType getMyElement(MyList* myList, int poz) {
       23:   24:    return myList->elems[poz];
       23:   24-block  0
        -:   25:}
        -:   26:
function setMyElement called 2 returned 100% blocks executed 100%
        2:   27:ElemType setMyElement(MyList* myList, int poz, ElemType elem) {
        2:   28:    ElemType delElem = getMyElement(myList, poz);
        2:   28-block  0
call    0 returned 2
        2:   29:    myList->elems[poz] = elem;
        2:   30:    return delElem;
        -:   31:}
        -:   32:
function deleteElem called 2 returned 100% blocks executed 100%
        2:   33:ElemType deleteElem(MyList* myList, int poz) {
        2:   34:    ElemType delElem = getMyElement(myList, poz);
        2:   34-block  0
call    0 returned 2
        2:   35:    ElemType lastElem = getMyElement(myList, myList->length - 1);
call    0 returned 2
        2:   36:    setMyElement(myList, poz, lastElem);
call    0 returned 2
        2:   37:    myList->length--;
        2:   38:    return delElem;
        -:   39:}
        -:   40:
function updateElem called 2 returned 100% blocks executed 100%
        2:   41:ElemType updateElem(MyList* participants, Participant participant) {
        9:   42:    for (int i = 0; i < participants->length; i++) {
        2:   42-block  0
        7:   42-block  1
        9:   42-block  2
branch  0 taken 7
branch  1 taken 2 (fallthrough)
        7:   43:        if (strcmp(participant.lastName,participants->elems[i].lastName)==0
        7:   43-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 5
        2:   44:            && strcmp(participant.firstName, participants->elems[i].firstName)==0) {
        2:   44-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 0
        2:   45:            participants->elems[i] = participant;
        2:   45-block  0
        -:   46:
        -:   47:        }
        -:   48:    }
        2:   49:    return participant;
        2:   49-block  0
        -:   50:}
        -:   51:
function size called 28 returned 100% blocks executed 100%
       28:   52:int size(MyList* myList) {
       28:   53:    return myList->length;
       28:   53-block  0
        -:   54:}
        -:   55:
function copyMyList called 1 returned 100% blocks executed 100%
        1:   56:MyList copyMyList(MyList* myList) {
        1:   57:    MyList participants=createEmpty();
        1:   57-block  0
call    0 returned 1
        2:   58:    for (int i = 0; i < size(myList); i++) {
        2:   58-block  0
call    0 returned 2
branch  1 taken 1
branch  2 taken 1 (fallthrough)
        1:   59:        ElemType eL=getMyElement(myList, i);
        1:   59-block  0
call    0 returned 1
        1:   60:        addElem(&participants, eL);
call    0 returned 1
        -:   61:    }
        1:   62:    return participants;
        1:   62-block  0
        -:   63:}
