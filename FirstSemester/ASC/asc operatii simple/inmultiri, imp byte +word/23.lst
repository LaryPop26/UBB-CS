     1                                  ;de calculat: [(a+b)*3-c*2]+d
     2                                  ;a,b,c - byte d - word
     3                                  ;ex a=5, b=8, c=9, d=265 rez: [( 5 + 8 ) * 3 - 9 * 2 ] + 265 = (13 * 3 - 18) + 265 = 39 - 18 + 265 =  21 + 265 = 286 = 11Eh
     4                                  bits 32 ;asamblare si compilare pentru arhitectura de 32 biti
     5                                  ; definim punctul de intrare in programul principal
     6                                  global  start 
     7                                  
     8                                  extern  exit ; indicam asamblorului ca exit exista, chiar daca noi nu o vom defini
     9                                  import  exit msvcrt.dll; exit este o functie care incheie procesul, este definita in msvcrt.dll
    10                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
    11                                  segment  data use32 class=data ; segmentul de date in care se vor defini variabilele 
    12 00000000 05                          a db 5
    13 00000001 08                          b db 8
    14 00000002 09                          c db 9
    15 00000003 0901                        d dw 265
    16                                      
    17                                  segment  code use32 class=code ; segmentul de cod
    18                                  start: 
    19 00000000 A0[00000000]                mov al,byte[a] ; al = a             5 = 5h
    20 00000005 0205[01000000]              add al,byte[b] ; al = a+b           13 = Dh
    21 0000000B B203                        mov dl, 3      ; dl = 3             3 = 3h
    22 0000000D F6E2                        mul dl         ; ax = al * dl       39 = 27h
    23 0000000F 6689C3                      mov bx,ax      ; bx = ax            27h
    24 00000012 B102                        mov cl, 2      ; cl = 2             2 = 2h
    25 00000014 A0[02000000]                mov al,byte[c] ; al = c             9 = 9h
    26 00000019 F6E1                        mul cl         ; ax = al * cl       18 = 12h
    27 0000001B 6689C2                      mov dx,ax      ; dx = ax            12h
    28 0000001E 6689D8                      mov ax, bx     ; ax = bx            27h
    29 00000021 6629D0                      sub ax, dx     ; ax = ax - dx       21 = 15h
    30 00000024 668B15[03000000]            mov dx,word[d] ; dx = d             265 = 109h
    31 0000002B 6601D0                      add ax, dx     ; ax = ax + dx       286 = 11Eh
    32                                      
    33 0000002E 6A00                        push   dword 0 ;se pune pe stiva codul de retur al functiei exit
    34 00000030 FF15[00000000]          	call   [exit] ;apelul functiei sistem exit pentru terminarea executiei programului	
