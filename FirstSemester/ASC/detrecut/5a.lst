     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01000000                    a dd 1
    14 00000004 02000000                    b dd 2
    15 00000008 03000000                    c dd 3
    16 0000000C 4D6564696120657374-         message1 db "Media este: %d ",0
    16 00000015 653A2025642000     
    17                                      
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 A1[00000000]                    mov eax,[a]
    22 00000005 0305[04000000]                  add eax,[b]
    23 0000000B 0305[08000000]                  add eax,[c]
    24                                          
    25 00000011 99                              cdq
    26 00000012 BB03000000                      mov ebx,3
    27 00000017 F7FB                            idiv ebx
    28                                          
    29 00000019 50                              push dword eax
    30 0000001A 68[0C000000]                    push dword message1  
    31 0000001F FF15[00000000]                  call [printf]       ; apelam functia printf pentru afisare
    32 00000025 83C408                          add esp, 4*2        ; eliberam parametrii de pe stiva
    33                                      
    34                                          ; exit(0)
    35 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
