     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  ;Se da un sir de caractere S. 
     3                                  ;Sa se construiasca sirul D care sa contina toate literele mari din sirul S
     4                                  ;ex
     5                                  ;S: 'a', 'A', 'b', 'B', '2', '%', 'x', 'M'
     6                                  ;D: 'A', 'B', 'M'
     7                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     8                                  global start        
     9                                  
    10                                  ; declare external functions needed by our program
    11                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    12                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data   
    17 00000000 614162423225784D            s db 'a', 'A', 'b', 'B', '2', '%', 'x', 'M'
    18                                      len equ $-s
    19 00000008 <res 00000008>              d resb len
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 B908000000                      mov ecx,len
    25 00000005 BE00000000                      mov esi,0
    26 0000000A BF00000000                      mov edi,0
    27 0000000F E318                            jecxz final
    28                                          repeta:
    29 00000011 8A86[00000000]                      mov al,[s+esi] ; el curent
    30                                              
    31                                              ; verifica daca e litera mica sau mare
    32 00000017 3C41                                cmp al,'A' 
    33 00000019 720B                                jnae final_repeta
    34                                              
    35 0000001B 3C5A                                cmp al,'Z'
    36 0000001D 7707                                jnbe final_repeta
    37                                              
    38 0000001F 8887[08000000]                      mov [d+edi],al
    39 00000025 47                                  inc edi
    40                                                          
    41                                              final_repeta:
    42 00000026 46                                  inc esi
    43                                              
    44 00000027 E2E8                            loop repeta
    45                                          
    46                                          final:
    47                                      
    48                                          ; exit(0)
    49 00000029 6A00                            push dword 0      ; push the parameter for exit onto the stack
    50 0000002B FF15[00000000]                  call [exit]       ; call exit to terminate the program
    51                                  
