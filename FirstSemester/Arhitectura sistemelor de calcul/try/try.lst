     1                                  ;de calculat: (8-ab100+c)/d+x
     2                                  ;a,b,d-byte; c-doubleword; x-qword
     3                                  ;(8-1020100+2655674)/30 + 1073741456 = (8 - 20000 + 2655674) / 30 + 1073741456 = 
     4                                  ;2653682 / 30 + 1073741456 = 87856 + 1073741456 = 1073829312
     5                                  
     6                                  bits 32 ; assembling for the 32 bits architecture
     7                                  
     8                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     9                                  global start
    10                                  
    11                                  ; declare external functions needed by our program
    12                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    13                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 0A                          a db 10
    19 00000001 14                          b db 20
    20 00000002 BA852800                    c dd 2655674
    21 00000006 1E                          d db 30
    22 00000007 90FEFF3F00000000            x dq 1073741456
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 B064                            mov al,100              ;al=100
    28 00000002 F62D[00000000]                  imul byte[a]            ;ax=al*a=100*a
    29 00000008 6689C3                          mov bx,ax               ;bx=ax
    30 0000000B A0[01000000]                    mov al,byte[b]          ;al=b
    31 00000010 6698                            cbw                     ;ax=b
    32 00000012 66F7EB                          imul bx                 ;dx:ax=ax*bx=b*100*a
    33                                          
    34 00000015 6652                            push dx
    35 00000017 6650                            push ax
    36 00000019 58                              pop eax                 ;eax=100*a*b
    37                                          
    38 0000001A 89C3                            mov ebx,eax             ;ebx=100*a*b
    39 0000001C B808000000                      mov eax,8               ;eax=8
    40 00000021 19D8                            sbb eax,ebx             ;eax=eax-ebx=8-100*a*b
    41 00000023 0305[02000000]                  add eax,dword[c]        ;eax=8-100*a*b+c
    42 00000029 99                              cdq                     ;edx:eax=8-100*a*b+c
    43 0000002A 89C3                            mov ebx,eax             ;edx:ebx=8-100*a*b+c
    44                                          
    45 0000002C A0[06000000]                    mov al,byte[d]
    46 00000031 6698                            cbw                     ;ax=d
    47 00000033 6699                            cwd                     ;eax=d
    48                                          
    49                                          ; exit(0)
    50 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
