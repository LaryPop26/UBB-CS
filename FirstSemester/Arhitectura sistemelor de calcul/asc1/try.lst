     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fclose, printf, fwrite
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import fwrite msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 616E612E74787400            nume_fisier db "ana.txt", 0
    14 00000008 7700                        mod_acces db "w", 0
    15 0000000A FFFFFFFF                    descriptor_f dd -1
    16                                      len equ 100
    17 0000000E 00<rept>                    text times 100 db 0
    18 00000072 44657363726970746F-         afisare_format db "Descriptorul este %x", 0
    18 0000007B 72756C206573746520-
    18 00000084 257800             
    19 00000087 256400                      format db "%d", 0
    20                                  
    21                                  segment code use32 class=code
    22                                  start:
    23                                      ; fopen(nume, mod_acces)
    24 00000000 68[08000000]                push dword mod_acces
    25 00000005 68[00000000]                push dword nume_fisier
    26 0000000A FF15[00000000]              call [fopen]
    27 00000010 83C408                      add esp, 4 * 2
    28                                  
    29 00000013 A3[0A000000]                mov [descriptor_f], eax
    30                                  
    31 00000018 83F800                      cmp eax, 0
    32 0000001B 745D                        je final
    33                                  
    34                                      ; Printeaza descriptorul in baza 16
    35 0000001D 68[72000000]                push afisare_format
    36 00000022 FF35[0A000000]              push dword [descriptor_f]
    37 00000028 FF15[00000000]              call [printf]
    38 0000002E 83C408                      add esp, 8
    39                                  
    40                                      ; Scrie cifrele impare din descriptor in fisier
    41 00000031 A1[0A000000]                mov eax, [descriptor_f]
    42 00000036 BB0A000000                  mov ebx, 10
    43 0000003B B900000000                  mov ecx, 0
    44                                  
    45                                  write_digits:
    46 00000040 BA00000000                  mov edx, 0
    47 00000045 F7F3                        div ebx
    48 00000047 F7C201000000                test edx, 1
    49 0000004D 7417                        jz not_odd
    50                                  
    51 0000004F 80C230                      add dl, '0'
    52                                      ; fwrite(&dl, 1, 1, file)
    53 00000052 6A01                        push dword 1
    54 00000054 6A01                        push dword 1
    55 00000056 52                          push dword edx
    56 00000057 FF35[0A000000]              push dword [descriptor_f]
    57 0000005D FF15[00000000]              call [fwrite]
    58 00000063 83C410                      add esp, 16
    59                                  
    60                                  not_odd:
    61 00000066 83F800                      cmp eax, 0
    62 00000069 75D5                        jnz write_digits
    63                                  
    64                                      ; fclose(file)
    65 0000006B FF35[0A000000]              push dword [descriptor_f]
    66 00000071 FF15[00000000]              call [fclose]
    67 00000077 83C404                      add esp, 4
    68                                  
    69                                  final:
    70                                      ; exit(0)
    71 0000007A 6A00                        push dword 0
    72 0000007C FF15[00000000]              call [exit]
