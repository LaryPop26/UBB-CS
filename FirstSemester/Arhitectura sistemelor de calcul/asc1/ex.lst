     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, fread, fopen, fclose             ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 612E74787400                nume db "a.txt", 0
    17 00000006 7200                        mod_f db "r", 0
    18                                      
    19 00000008 FFFFFFFF                    descriptor_f dd -1
    20                                      
    21 0000000C 416D20636974697420-         format db "Am citit %d caractere.Textul este: %s", 0
    21 00000015 256420636172616374-
    21 0000001E 6572652E5465787475-
    21 00000027 6C20657374653A2025-
    21 00000030 7300               
    22 00000032 64                          len db 100
    23 00000033 00<rept>                    text times 101 db 0
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[06000000]                    push dword mod_f
    29 00000005 68[00000000]                    push dword nume
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4* 2
    32                                          
    33 00000013 A3[08000000]                    mov [descriptor_f],eax
    34                                          
    35 00000018 83F800                          cmp eax,0
    36 0000001B 743E                            je final
    37                                          
    38 0000001D FF35[08000000]                  push dword [descriptor_f]
    39 00000023 68[32000000]                    push dword len
    40 00000028 6A01                            push dword 1
    41 0000002A 68[33000000]                    push dword text
    42 0000002F FF15[00000000]                  call [fread]
    43 00000035 83C410                          add esp, 4* 4
    44                                          
    45 00000038 68[33000000]                    push dword text
    46 0000003D 50                              push dword eax
    47 0000003E 68[0C000000]                    push dword format
    48 00000043 FF15[00000000]                  call [printf]
    49 00000049 83C40C                          add esp,4*3
    50                                          
    51 0000004C FF35[08000000]                  push dword [descriptor_f]
    52 00000052 FF15[00000000]                  call [fclose]
    53 00000058 83C404                          add esp,4
    54                                          
    55                                          final:
    56                                      
    57                                          ; exit(0)
    58 0000005B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    59 0000005D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
