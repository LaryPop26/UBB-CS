     1                                  ;de calculat (a*b)/c
     2                                  ;a,b,c,d - byte e,f,g,h - word
     3                                  ;ex a = 250 , b = 200 , c = 165 rez: (250*200)/165 = 303 r 5
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 FA                          a db 250
    17 00000001 C8                          b db 200
    18 00000002 A5                          c db 165
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 A0[00000000]                    mov al,byte[a]  ; al = a
    24 00000005 F625[01000000]                  mul byte[b]     ; ax=al*b  
    25 0000000B 8A1D[02000000]                  mov bl,byte[c]  ; bl=c
    26 00000011 F6F3                            div bl          ; al=ax/bl
    27                                                          ; ah=ax%bl
    28                                          
    29                                          ; exit(0)
    30 00000013 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000015 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
