     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 00FF5602                    x dw -256, 256h
    14 00000004 00FF                        y dw 256|-256
    15 00000006 0004                        z db $-z, y-x
    16 00000008 01792D78                      db 'y'-'x','y-x'
    17 0000000C 80                          a db 512>>2;, -512<<2
    18 0000000D FAFF0000                    b dw z-a, !(z-a)
    19                                      ;j dd ($-b) + (d-$), $-2*y+3
    20 00000011 80FF                        d db -128, 128^(~128)
    21 00000013 <res 00000018>              e times 2 resw 6
    22 0000002B 3412000078560000-           times 2 dd 1234h, 5678h
    22 0000002B <rept>             
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28                                      
    29                                          ; exit(0)
    30 00000000 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000002 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
